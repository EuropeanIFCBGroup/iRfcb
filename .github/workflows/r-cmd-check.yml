# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Restore R package cache
        uses: actions/cache@v3
        with:
          path: ${{ runner.os == 'Windows' && 'C:/Users/runner/Documents/R/win-library' || '~/.R/library' }}
          key: ${{ runner.os }}-${{ matrix.config.r }}-${{ hashFiles('**/*.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.config.r }}-

      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Install XQuartz on macOS
        if: runner.os == 'macOS'
        run: |
          brew install --cask xquartz

      - name: setup iRfcb venv
        shell: Rscript {0}
        run: |

          library(reticulate)

          path_to_venv <- virtualenv_create(
            envname = "~/.virtualenvs/iRfcb",
            python = Sys.which("python"),
            packages = c(
              "scipy==1.13.0", "pandas==2.2.2", "matplotlib==3.9.0"
            )
          )


          Sys.setenv(RETICULATE_PYTHON = virtualenv_python(path_to_venv))
          writeLines(
                paste0("RETICULATE_PYTHON=", virtualenv_python(path_to_venv)),
                Sys.getenv("GITHUB_ENV")
          )

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'

      - name: Save R package cache
        uses: actions/cache@v3
        with:
          path: ${{ runner.os == 'Windows' && 'C:/Users/runner/Documents/R/win-library' || '~/.R/library' }}
          key: ${{ runner.os }}-${{ matrix.config.r }}-${{ hashFiles('**/*.lock') }}
